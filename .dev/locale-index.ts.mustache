{{#moduleNames}}
import { translate{{@key}} } from './{{.}}.js'
{{/moduleNames}}

export type SupportedLocale = {{#locales}}| '{{.}}'{{/locales}}

export const DefaultLocale: SupportedLocale = '{{defaultLocale}}'

export const isSupportedLocale = (locale: string): locale is SupportedLocale =>
  [{{#locales}}'{{.}}', {{/locales}}].includes(locale)

type Module = keyof typeof modules

const modules = {
{{#moduleNames}}
  '{{.}}': translate{{@key}},
{{/moduleNames}}
}

export const translate =
  <M extends Module>(locale: SupportedLocale, module: M, ...args: Parameters<ReturnType<(typeof modules)[M]>>): ReturnType<ReturnType<(typeof modules)[M]>> => {
    // @ts-ignore
    return modules[module](locale)(...args)
  }
