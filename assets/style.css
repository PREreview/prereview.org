@import url('@ibm/plex/IBM-Plex-Mono/fonts/split/woff2/IBMPlexMono-Regular.css');
@import url('@ibm/plex/IBM-Plex-Mono/fonts/split/woff2/IBMPlexMono-Bold.css');
@import url('@ibm/plex/IBM-Plex-Sans/fonts/split/woff2/IBMPlexSans-Regular.css');
@import url('@ibm/plex/IBM-Plex-Sans/fonts/split/woff2/IBMPlexSans-Italic.css');
@import url('@ibm/plex/IBM-Plex-Sans/fonts/split/woff2/IBMPlexSans-Bold.css');
@import url('@ibm/plex/IBM-Plex-Sans/fonts/split/woff2/IBMPlexSans-BoldItalic.css');
@import url('open-color/open-color.css');
@import url('space.css');
@import url('step.css');

@custom-selector :--button button, [role='button'], .button;

@custom-selector :--heading h1, h2, h3, h4, h5, h6;

@custom-selector :--input [type='text'], :--textarea;

@custom-selector :--list ol, ul;

@custom-selector :--textarea textarea, [contenteditable];

.visually-hidden:not(:focus, :active) {
  position: absolute;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  block-size: 1px;
  inline-size: 1px;
}

*,
*::before,
*::after {
  padding: 0;
  box-sizing: border-box;
  margin: 0;
}

:root {
  --font-sans-serif: 'IBM Plex Sans', ui-sans-serif, system-ui, -apple-system, 'Segoe UI', 'Roboto', 'Helvetica Neue',
    'Noto Sans', 'Liberation Sans', 'Arial', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
  --font-monospace: 'IBM Plex Mono', ui-monospace, 'SF Mono', 'Monaco', 'Menlo', 'Consolas', 'Ubuntu Mono',
    'Liberation Mono', 'DejaVu Sans Mono', 'Courier New', monospace;
  --color-primary: var(--oc-red-6);
  --color-background: white;
  --color-background-alt: var(--oc-gray-0);
  --color-text: var(--oc-gray-8);
  --color-text-light: var(--oc-gray-6);
  --color-focus: var(--oc-yellow-7);
  --color-selection: var(--oc-indigo-1);
  --color-link: var(--oc-red-6);
  --color-link-dark: var(--oc-red-8);
  --color-divider: var(--oc-gray-3);
  --color-divider-light: var(--oc-gray-1);
  --color-error: var(--oc-red-7);
  --color-success: var(--oc-green-7);
  --width-divider: 4px;
  --width-divider-wide: calc(var(--width-divider) * 1.5);
  --radius-divider: calc(var(--width-divider) * 5);

  font-family: var(--font-sans-serif);
  font-weight: 400;
  line-height: 1.5;
}

::selection {
  background-color: var(--color-selection);
}

:focus-visible {
  @media screen {
    outline: var(--color-focus) solid var(--width-divider);
    outline-offset: var(--width-divider);
  }
}

:any-link,
summary {
  color: var(--color-link-dark);
  hyphens: manual;

  @media screen {
    text-decoration: underline;
    text-decoration-thickness: max(1px, 0.08rem);
    text-underline-offset: 0.1em;

    &:hover {
      text-decoration-thickness: max(3px, 0.1875rem, 0.12em);
      text-decoration-skip-ink: none;
      text-decoration-skip: none;
    }
  }
}

html {
  @media screen {
    color: var(--color-text);
    background-color: var(--color-background);
    block-size: 100%;
  }
}

body {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  font-size: var(--step-0);
  padding-block-end: var(--space-xl-2xl);

  @media screen {
    min-block-size: 100%;
    min-inline-size: 320px;
  }
}

body > :not(aside),
body > aside > * {
  inline-size: 100%;
  max-inline-size: 75ch;
  margin-inline: auto;
  padding-inline: var(--space-s-m);
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: var(--space-m);
  block-size: var(--space-2xl-3xl);

  & > .logo {
    flex-grow: 1;
    block-size: 100%;
    padding-block: var(--space-s-m);

    & > a {
      display: inline-flex;
      block-size: 100%;
    }

    & img {
      block-size: 100%;
    }
  }
}

img {
  display: block;
  block-size: auto;
  max-block-size: 100%;
  inline-size: auto;
  max-inline-size: 100%;
}

nav {
  @nest :not(body) > & {
    margin-block-start: var(--space-m);
  }
}

header {
  @nest :not(body) > & {
    & + :not(.visually-hidden), & + .visually-hidden + * {
      margin-block-start: var(--space-m-l);
    }
  }
}

article {
  @nest :not(aside) > & {
    margin-block-start: var(--space-s-l);
  }

  & > header > :first-child {
    margin-block-start: 0;
  }
}

:--heading {
  font-weight: 700;
  line-height: 1.2;

  @nest :not(legend) > & {
    margin-block-start: var(--space-s-m);
  }

  @nest :--heading + & {
    margin-block-start: var(--space-2xs-xs);
  }
}

h1 {
  font-size: var(--step-5);

  @nest form & {
    font-size: var(--step-4);
  }
}

h2 {
  font-size: var(--step-4);

  @nest .preview & {
    font-size: var(--step-3);
  }
}

h3 {
  font-size: var(--step-2);

  @nest .preview & {
    font-size: var(--step-1);
  }
}

h4 {
  font-size: var(--step-1);

  @nest .preview & {
    font-size: var(--step-0);
  }
}

h5 {
  font-size: var(--step-0);

  @nest .preview & {
    font-size: var(--step--1);
  }
}

h6 {
  font-size: var(--step--1);

  @nest .preview & {
    font-size: var(--step--2);
  }
}

:--list {
  margin-block-start: var(--space-s);
  padding-inline-start: var(--space-m);

  @nest header > & {
    margin-block-start: var(--space-2xs);
  }

  @nest fieldset > & {
    list-style-type: none;
    margin-block-start: 0;
    padding-inline-start: 0;

    & > li {
      margin-block-start: var(--space-s);
    }
  }
}

dl {
  @nest header > & {
    display: flex;
    flex-wrap: wrap;
    column-gap: var(--space-s-m);
    row-gap: var(--space-3xs);
    margin-block-start: var(--space-3xs-2xs);
    font-size: var(--step--2);

    & > div {
      display: flex;
      column-gap: var(--space-3xs-2xs);
    }
  }
}

dt {
  @nest header & {
    font-weight: 700;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }
}

p {
  hyphens: auto;
  margin-block-start: var(--space-xs);
}

blockquote {
  margin-block-start: var(--space-xs-s);
}

details {
  margin-block-start: var(--space-2xs-xs);

  @nest [role='note'] + & {
    margin-block-start: var(--space-xs-s);
  }

  & > div {
    position: relative;
    padding-inline-start: var(--space-s);

    &::before {
      position: absolute;
      content: '';
      border-inline-start: var(--width-divider) solid var(--color-divider-light);
      block-size: 100%;
      inset-inline-start: calc((0.6em - var(--width-divider)) / 2);
    }
  }
}

summary {
  cursor: pointer;
  inline-size: fit-content;
  touch-action: manipulation;
}

dfn {
  font-style: normal;
}

sub {
  vertical-align: baseline;
  font-size: 50%;
  font-weight: 700;
  line-height: 0;

  @supports (font-variant-position: sub) {
    font-size: inherit;
    font-weight: inherit;
    font-variant-position: sub;
  }
}

sup {
  position: relative;
  inset-block-start: -0.5em;
  vertical-align: baseline;
  font-size: 70%;
  font-weight: 700;
  line-height: 0;

  @supports (font-variant-position: super) {
    position: static;
    font-size: inherit;
    font-weight: inherit;
    font-variant-position: super;
  }
}

label {
  cursor: pointer;
  touch-action: manipulation;

  &:not([for]) {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    inline-size: fit-content;
    margin-block-start: var(--space-m);

    &.textarea {
      inline-size: 100%;
    }

    & span {
      flex: 1;
    }

    & > :is([type='checkbox'], [type='radio']) {
      margin-inline-end: var(--space-2xs-xs);
    }

    & + [role='note'] {
      margin-inline-start: calc(var(--space-m) + var(--space-2xs-xs));
    }

    @nest fieldset > &, fieldset :not(.conditional) > & {
      margin-block-start: var(--space-s);
    }

    @nest details + & {
      margin-block-start: var(--space-m-l);
    }
  }
}

:--button {
  position: relative;
  display: inline-block;
  font-size: var(--step-1);
  font-weight: 700;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-align: center;
  text-decoration-line: none;
  line-height: 1.5;
  letter-spacing: -0.5px;
  min-inline-size: 4em;
  color: var(--color-link-dark);
  border: var(--width-divider) solid var(--color-link-dark);
  border-radius: var(--radius-divider);
  transform: translateZ(0);
  padding-block: var(--space-2xs);
  padding-inline: var(--space-xs);
  touch-action: manipulation;
  user-select: none;

  @nest :not(.button-group) > & {
    margin-block-start: var(--space-m-l);
  }

  &::after {
    position: absolute;
    content: '';
    background-clip: padding-box;
    background-color: var(--color-link);
    border: 0 solid transparent;
    border-block-end-width: var(--width-divider);
    border-radius: var(--radius-divider);
    z-index: -1;
    inset: 0;
    inset-block-end: calc(-1 * var(--width-divider));
  }

  &:focus {
    user-select: auto;
  }

  &:focus-visible {
    outline-offset: 0;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &:not(:disabled) {
    cursor: pointer;
    transition: filter 0.2s;

    &:hover {
      filter: brightness(1.1);
    }
  }

  @media screen {
    color: var(--color-background);
    background-color: var(--color-link-dark);
    -webkit-tap-highlight-color: transparent;
    border: 0 solid transparent;
    border-block-end-width: var(--width-divider);

    &:active {
      margin-block-end: calc(var(--width-divider) / 2);
      inset-block-start: calc(var(--width-divider) / 2);
      border-block-end-width: calc(var(--width-divider) / 2);
    }
  }
}

.button-secondary {
  font-size: var(--step-0);
  padding-block: var(--space-3xs-2xs);
  padding-inline: var(--space-2xs-xs);

  &::after {
    background-color: var(--color-divider-light);
  }

  &:not(:disabled) {
    &:hover {
      filter: brightness(0.9);
    }
  }

  @media screen {
    color: var(--color-text-light);
    background-color: var(--color-divider);
  }
}

.button-group {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  column-gap: var(--space-2xs-s);
  row-gap: var(--space-2xs-xs);
  margin-block-start: var(--space-m-l);

  @nest .preview + & {
    margin-block-start: var(--space-s);
  }
}

[role='alert'] {
  font-weight: 700;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin-block-start: var(--space-3xs);
  color: var(--color-error);

  @nest :not(label) + & {
    margin-block-start: var(--space-s);
  }

  @nest details + & {
    margin-block-start: var(--space-m-l);
  }
}

[role='note'] {
  font-size: var(--step-0);
  margin-block-start: var(--space-4xs-3xs);
  color: var(--color-text-light);

  @nest fieldset > & {
    margin-block-start: var(--space-xs);
  }
}

fieldset {
  display: flex;
  flex-direction: column;
  border: 0;
  margin-block-start: var(--space-s-m);
}

legend {
  float: inline-start;
}

.error {
  @media screen {
    padding-inline-start: var(--space-s);
    border-inline-start: var(--width-divider-wide) solid var(--color-error);
  }
}

.inset {
  @media screen {
    margin-block-start: var(--space-s);
    padding: var(--space-s);
    border-inline-start: var(--width-divider-wide) solid var(--color-divider);

    & > :first-child {
      margin-block-start: 0;
    }
  }
}

:--input {
  font: inherit;
  color: inherit;
  background-color: var(--color-background);
  border: var(--width-divider) solid currentcolor;
  border-radius: 0;
  padding-block: var(--space-3xs);
  padding-inline: var(--space-2xs);
  inline-size: 100%;
  max-block-size: 30vh;

  &:not([hidden]) {
    display: block;
  }

  &:focus-visible {
    outline-offset: 0;
  }

  &:is([aria-invalid]) {
    border-color: var(--color-error);

    &:focus-visible {
      border-color: currentcolor;
    }
  }

  @nest :not(label) > &:first-child {
    margin-block-start: var(--space-s-m);
  }

  @nest [role='alert'] + & {
    margin-block-start: var(--space-3xs);
  }

  &:read-only {
    cursor: not-allowed;
  }

  @media screen {
    max-block-size: 75vh;

    @media (min-width: 50em) {
      max-block-size: 50vh;
    }
  }
}

html-editor {
  display: contents;

  & :--textarea {
    block-size: 100vh;
    resize: none;
  }
}

:--textarea {
  overflow-y: auto;
  resize: block;
  cursor: text;
  scrollbar-gutter: stable;

  & > :first-child {
    margin-block-start: 0;
  }
}

.conditional {
  position: relative;
  margin-block-start: var(--space-2xs);
  padding-inline-start: calc(var(--space-m) + var(--space-2xs-xs));

  &::before {
    position: absolute;
    content: '';
    border-inline-start: var(--width-divider) solid var(--color-text-light);
    block-size: 100%;
    inset-inline-start: calc((var(--space-m) - var(--width-divider)) / 2);
  }

  & label {
    margin-block-start: 0;
  }
}

[type='checkbox'],
[type='radio'] {
  appearance: none;
  flex-shrink: 0;
  display: inline-grid;
  color: currentcolor;
  background-color: var(--color-background);
  border: var(--width-divider) solid currentcolor;
  cursor: pointer;
  inline-size: var(--space-m);
  block-size: var(--space-m);
  place-content: center;

  &::before {
    content: '';
    inline-size: var(--space-xs);
    block-size: var(--space-xs);
    background-color: transparent;
  }

  &:checked::before {
    background-color: currentcolor;
  }

  &:focus-visible {
    outline-offset: 0;
  }
}

[type='checkbox'] {
  &::before {
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  }
}

[type='radio'] {
  border-radius: 50%;

  &::before {
    border-radius: 50%;
  }
}

.home-logo {
  block-size: var(--space-3xl);
}

.doi {
  font-family: var(--font-monospace);
  user-select: all;
}

.back {
  display: inline-flex;
  align-items: center;

  &::before {
    content: '‹\00a0';
  }

  &:any-link {
    color: inherit;
  }

  @media print {
    display: none;
  }
}

.author-list {
  display: flex;
  flex-wrap: wrap;
  font-size: var(--step--1);
  font-style: italic;
  padding-inline-start: 0;

  & > li {
    display: inline-flex;
    align-items: center;

    &:not(:last-child)::after {
      content: ', ';
      white-space: pre;
    }
  }

  & a {
    text-decoration-line: inherit;
    color: inherit;

    @media screen {
      display: flex;
      align-items: center;

      &::after {
        content: '';
        inline-size: 1em;
        block-size: 1em;
        margin-inline-start: 0.4ch;
        margin-inline-end: 0.1ch;
        background-image: url('orcid.svg');
      }

      &:hover {
        text-decoration-line: underline;
      }
    }
  }
}

.panel {
  font-size: var(--step-1);
  text-align: center;
  line-height: 1.25;
  padding: var(--space-xs-m);
  border: var(--width-divider) solid transparent;

  & > :first-child {
    margin-block-start: 0;
  }

  @media print {
    border-color: var(--color-success);
  }

  @media screen {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    color: var(--color-background);
    background-color: var(--color-success);
  }
}

.preview {
  font-size: var(--step--1);
  border: var(--width-divider) solid currentcolor;
  padding-block: var(--space-3xs);
  padding-inline: var(--space-2xs);

  &:focus-visible {
    outline-offset: 0;
  }

  & > :first-child {
    margin-block-start: 0;
  }

  @media screen {
    max-block-size: 75vh;
    overflow-y: auto;
    scrollbar-gutter: stable;

    @media (min-width: 50em) {
      max-block-size: 50vh;
    }
  }
}

.cards {
  list-style-type: none;
  margin-block-start: var(--space-m-l);
  padding-inline-start: 0;

  & article {
    position: relative;
    padding-block: var(--space-xs);
    padding-inline: var(--space-s);
    inline-size: 100%;

    & > :first-child {
      margin-block-start: 0;
    }
  }

  & h2 {
    font-size: var(--step-3);
  }

  & a {
    &::after {
      position: absolute;
      inset: 0;
      content: '';
      border: var(--width-divider) solid var(--color-divider-light);
      border-radius: var(--radius-divider);
    }

    &:hover::after {
      border-color: var(--color-divider);
    }

    &:focus-visible {
      outline-width: 0;

      &::after {
        @media screen {
          border-color: var(--color-divider);
          outline: var(--color-focus) solid var(--width-divider);
        }
      }
    }
  }
}

.more {
  margin-block-start: var(--space-xs);
  display: inline-flex;
  align-items: center;

  &::before {
    order: 1;
    content: '\00a0›';
  }

  &:any-link {
    color: inherit;
  }
}

.two-up {
  @media screen and (min-width: 50em) {
    margin-inline-start: 50%;

    & > main {
      &,
      & > :first-child {
        margin-block-start: 0;
      }
    }

    & > :not(aside),
    & > aside > * {
      margin-inline: 0;
      padding-inline: var(--space-m-xl);
    }

    & > aside {
      position: fixed;
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      inset-block: 0;
      inset-inline: 0 50%;
      background-color: var(--color-background-alt);
      overflow-y: auto;
      overscroll-behavior-y: contain;
      scrollbar-gutter: stable;
      padding-block: var(--space-m) var(--space-xl-2xl);

      &:focus-visible {
        outline-offset: calc(-1 * var(--width-divider));
      }
    }
  }
}

.phase-banner {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  column-gap: var(--space-2xs);
  background-color: var(--color-background-alt);
  padding-block: var(--space-2xs);
  padding-inline: var(--space-2xs-s);
  margin-inline: calc(-1 * var(--space-2xs-s));

  & > span {
    flex: 1;
    font-size: var(--step--1);
  }
}

.tag {
  display: inline-block;
  font-size: var(--step--2);
  font-weight: 700;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-transform: uppercase;
  letter-spacing: 1px;
  color: var(--color-background);
  background-color: var(--color-primary);
  padding-block: var(--space-4xs);
  padding-inline: var(--space-3xs-2xs);
}
